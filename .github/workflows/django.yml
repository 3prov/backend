name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ "3.10" ]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install tblib
    - name: Create env file
      run: |
        cp .env.example .env
    - name: Run Tests
      run: |
        coverage run --omit=*/tests* manage.py test --parallel 4
    - name: Coverage Report
      run: |
        coverage report


  lint:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ "3.10" ]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Black lint module
      run: |
        python -m pip install --upgrade pip
        pip install black

    - name: Run Lint check
      run: |
        black . --config pyproject.toml --check

  build_prod:
    needs: [ test, lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create env files
        run: |
          cp .env.example .env
          cp .env.db.example .env.db

      - name: Build in production mode
        run: |
          set -x
          make build_prod

  build_dev:
    needs: [ test, lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create env file
        run: |
          cp .env.example .env

      - name: Build in production mode
        run: |
          set -x
          make build_dev

#  TODO: add mypy linting
